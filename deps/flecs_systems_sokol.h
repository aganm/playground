// Comment out this line when using as DLL
#define flecs_systems_sokol_STATIC
#ifndef FLECS_SYSTEMS_SOKOL_H
#define FLECS_SYSTEMS_SOKOL_H

/* This generated file contains includes for project dependencies */
/*
                                   )
                                  (.)
                                  .|.
                                  | |
                              _.--| |--._
                           .-';  ;`-'& ; `&.
                          \   &  ;    &   &_/
                           |"""---...---"""|
                           \ | | | | | | | /
                            `---.|.|.|.---'

 * This file is generated by bake.lang.c for your convenience. Headers of
 * dependencies will automatically show up in this file. Include bake_config.h
 * in your main project file. Do not edit! */

#ifndef FLECS_SYSTEMS_SOKOL_BAKE_CONFIG_H
#define FLECS_SYSTEMS_SOKOL_BAKE_CONFIG_H

/* Headers of public dependencies */
#include "flecs.h"
#include "flecs_components_gui.h"
#include "flecs_components_graphics.h"
#include "flecs_components_transform.h"
#include "flecs_components_geometry.h"
#include "flecs_systems_transform.h"

/* Convenience macro for exporting symbols */
#ifndef flecs_systems_sokol_STATIC
#if flecs_systems_sokol_EXPORTS && (defined(_MSC_VER) || defined(__MINGW32__))
  #define FLECS_SYSTEMS_SOKOL_API __declspec(dllexport)
#elif flecs_systems_sokol_EXPORTS
  #define FLECS_SYSTEMS_SOKOL_API __attribute__((__visibility__("default")))
#elif defined _MSC_VER
  #define FLECS_SYSTEMS_SOKOL_API __declspec(dllimport)
#else
  #define FLECS_SYSTEMS_SOKOL_API
#endif
#else
  #define FLECS_SYSTEMS_SOKOL_API
#endif

#endif



#ifdef __cplusplus
extern "C" {
#endif

/*
typedef int MyComponent;
*/

typedef struct FlecsSystemsSokol {
    int32_t dummy;
} FlecsSystemsSokol;

FLECS_SYSTEMS_SOKOL_API
void FlecsSystemsSokolImport(
    ecs_world_t *world);

#define FlecsSystemsSokolImportHandles(handles)

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus

namespace flecs {
namespace systems {

class sokol : FlecsSystemsSokol {
public:
    sokol(flecs::world& ecs) {
        FlecsSystemsSokolImport(ecs.c_ptr());

        ecs.module<flecs::systems::sokol>();
    }
};

}
}

#endif

#endif

